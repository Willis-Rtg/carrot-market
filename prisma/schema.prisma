// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String?    @unique
  password   String?
  phone      String?    @unique
  github_id  Int?       @unique
  avatar     String?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  SMSToken   SMSToken[]
  Product    Product[]
}

model SMSToken {
  id         Int      @id @default(autoincrement())
  token      Int      @unique
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  title       String
  price       Float
  description String
  photo       Photo[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Photo {
  id         Int      @id @default(autoincrement())
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}
